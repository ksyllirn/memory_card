from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import QApplication, QWidget, QLabel, QVBoxLayout, QHBoxLayout
from PyQt5.QtWidgets import QPushButton, QRadioButton, QGroupBox, QButtonGroup, QMessageBox
import sys
from random import shuffle
import style

app = QApplication(sys.argv)
window = QWidget()
window.setStyleSheet(style.window)
window.setWindowTitle('Memory card')
window.resize(400,400)
question_index = 1
current_score = 0
total = 1

btn_ok = QPushButton('ответить')
lbl_question = QLabel('вопрос')
grpbox_answers = QGroupBox('варианты ответа')
radiogroup = QButtonGroup()

rbtn_1 = QRadioButton('1')
rbtn_2 = QRadioButton('2')
rbtn_3 = QRadioButton('3')
rbtn_4 = QRadioButton('4')

radiogroup.addButton(rbtn_1)
radiogroup.addButton(rbtn_2)
radiogroup.addButton(rbtn_3)
radiogroup.addButton(rbtn_4)

def end_results():
    result = round(current_score / total * 100, 2)
    msg = QMessageBox()
    msg.setText('Процент правильных ответов:' + str(result))
    msg.exec()


def show_question():
    global total
    if question_index == len(question_list):
        end_results()
        return
    radiogroup.setExclusive(False)
    rbtn_1.setChecked(False)
    rbtn_2.setChecked(False)
    rbtn_3.setChecked(False)
    rbtn_4.setChecked(False)
    grpbox_answers.show()
    grpbox_result.hide()
    total += 1
    ask(question_list[question_index])
    btn_ok.setText('ответить')
    radiogroup.setExclusive(True)   

def show_result():
    global question_index
    check_answer()
    grpbox_answers.hide()
    grpbox_result.show()
    btn_ok.setText('следующий')
    question_index += 1
    
def ask(q):
    lbl_question.setText(q.question)
    shuffle(answers)
    answers[0].setText(q.right_answer)
    answers[1].setText(q.wrong1)
    answers[2].setText(q.wrong2)
    answers[3].setText(q.wrong3)

def check_answer():
    global current_score
    if answers[0].isChecked():
        lbl_right_answer.setText('ответ норм')
        grpbox_result.setStyleSheet('QGroupBox {border: 2px solid #00FF00; border-radius: 8%;}')
        current_score += 1
    else:
        lbl_right_answer.setText('ответ не норм \n правильный ответ:'+ answers[0].text())
        grpbox_result.setStyleSheet('QGroupBox {border: 2px solid #ffccbb; border-radius: 8%;}')

def button_action():
    if btn_ok.text() == 'ответить':
        show_result()
    else:
        show_question()



class Question():
    def __init__(self, question, right_answer, wrong1, wrong2, wrong3):
        self.question = question
        self.right_answer = right_answer
        self.wrong1 = wrong1
        self.wrong2 = wrong2
        self.wrong3 = wrong3

question_list = [ 
    Question('Что такое майнкрафт?', 'игра только из кубов', 'игра только из пирамид', 'игра только из шаров', 'игра из геометрических фигур'),
    Question('Что можно съесть?', 'паучий глаз', 'сахар', 'тростник', 'пшеница'),
    Question('Какого цвета может появиться овца?', 'розовый', 'голубой', 'желтый', 'бежевый'),
    Question('Можно ли сломать бедрок?', 'только в креативе', 'да, за пол часа', 'да, без проблем', 'нет'),
    Question('Сколько железа нужно для крафта ведра?', '3', '7', '5', '1'),
    Question('Можно ли приручить эндер дракона?', 'нет', 'да', 'как повезет', 'очень сложно но можно'),
    Question('Лучший материал для брони и инструментов', 'незерит', 'алмазы', 'золото', 'бронза'),
    Question('На что разделен каждый мир игры?', 'биомы', 'области', 'деревни', 'измерения'),
    Question('Сколько ног у гаста?', '9', '6', '12', '8'),
    Question('Майнкрафт - лучшя игра?', 'да', 'да', 'да', 'да')
]

grpbox_result = QGroupBox('Результат теста')
lbl_right_answer = QLabel('правильный ответ__')
v_line_res = QVBoxLayout()
v_line_res.addWidget(lbl_right_answer,alignment= Qt.AlignCenter)
grpbox_result.setLayout(v_line_res)

btn_ok.clicked.connect(button_action)

h_line_ans = QHBoxLayout()
v_line_ans_1 = QVBoxLayout()
v_line_ans_2 = QVBoxLayout()
 
v_line_ans_1.addWidget(rbtn_1)
v_line_ans_1.addWidget(rbtn_2)
v_line_ans_2.addWidget(rbtn_3)
v_line_ans_2.addWidget(rbtn_4)
h_line_ans.addLayout(v_line_ans_1)
h_line_ans.addLayout(v_line_ans_2)

grpbox_answers.setLayout(h_line_ans)

v_line_main = QVBoxLayout()
h_line_main_1 = QHBoxLayout()
h_line_main_2 = QHBoxLayout()
h_line_main_3 = QHBoxLayout()

h_line_main_1.addWidget(lbl_question, alignment= Qt.AlignCenter)
h_line_main_2.addWidget(grpbox_answers)
h_line_main_2.addWidget(grpbox_result)
h_line_main_3.addStretch(1)
h_line_main_3.addWidget(btn_ok,stretch=2)
h_line_main_3.addStretch(1)

v_line_main.addLayout(h_line_main_1,stretch=2)
v_line_main.addLayout(h_line_main_2,stretch=8)
v_line_main.addStretch(1)
v_line_main.addLayout(h_line_main_3,stretch=1)
v_line_main.addStretch(1)

answers = [rbtn_1, rbtn_2, rbtn_3, rbtn_4]
    
ask(question_list[0])


#
grpbox_result.hide()
#
window.setLayout(v_line_main)
window.show()
app.exec()
